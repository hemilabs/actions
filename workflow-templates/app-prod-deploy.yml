# GitHub Actions workflow to deploy to the production Kubernetes cluster.
# Changes are deployed from tags formatted like 'v*.*.*', to the user-facing production environment.
name: "Release"
on:
  push:
    tags: [ "v*.*.*" ]

concurrency:
  group: "prod-deploy-${{ github.event.number || github.ref }}"
  cancel-in-progress: false

job:
  # Prepare to deploy and release
  prepare:
    name: "Prepare"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
    outputs:
      version: "${{ steps.data.outputs.version }}"
      tag: "${{ steps.data.outputs.tag }}"
      version_type: "${{ steps.version.outputs.type }}"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Retrieve build data"
        id: "data"
        run: |
          VERSION=$(echo "$RAW_VERSION" | sed -e 's/^v//')
          TAG=$(echo "$RAW_VERSION" | sed -E 's/^([^v])/v\1/g')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          
          TYPE=unstable
          if echo "$VERSION" | grep -Eq '^[1-9][0-9]*\.[0-9]+\.[0-9]+$'; then
            TYPE=stable
          fi
          echo "Detected that $TAG is $TYPE"
          echo "type=$TYPE" >> "$GITHUB_OUTPUT"

  # Build and push Docker image
  docker:
    name: "Docker"
    uses: hemilabs/actions/.github/workflows/docker.yml@main
    needs: [ "prepare" ]
    with:
      version: "${{ github.sha }}"
      # context: "${{ github.workspace }}
      # platforms: "linux/amd64"
      # file: "${{ github.workspace }}/Dockerfile"
      # prebuild-commands: "echo 'hello world'"
      tags: | # TODO: Change image names
        hemilabs/app:latest
        hemilabs/app:${{ needs.prepare.outputs.tag }}
        hemilabs/app:${{ github.sha }}
        ghcr.io/hemilabs/app:latest
        ghcr.io/hemilabs/app:${{ needs.prepare.outputs.tag }}
        ghcr.io/hemilabs/app:${{ github.sha }}

  # Deploy to Kubernetes cluster
  deploy:
    name: "Deploy to prod"
    uses: hemilabs/actions/.github/workflows/deploy-kustomize.yml@main
    needs: [ "prepare", "docker" ]
    environment:
      name: "prod"
      url: "https://app.hemi.xyz/" # TODO: Use correct URL
    with:
      namespace: "app" # TODO: Use correct namespace
      kustomize: "${{ github.workspace }}/kubernetes/kustomize/overlays/prod/" # TODO: Use correct kustomize path
      image: "hemilabs/app:${{ needs.prepare.outputs.tag }}" # TODO: Change image name
    secrets:
      KUBECONFIG: "${{ secrets.PROD_KUBECONFIG }}"
      KUBECONFIG_CONTEXT: "${{ secrets.PROD_KUBECONFIG_CONTEXT }}"

#  # Create GitHub Release (example)
#  release:
#    name: "Release"
#    runs-on: "ubuntu-latest"
#    needs: [ "prepare", "docker" ]
#    permissions:
#      # Permission to write contents is required to create GitHub releases.
#      # Builds are performed in a separate job with more restrictive permissions
#      # because this permission allows any action to write to the repository.
#      contents: write
#    steps:
#      - name: "Checkout repository"
#        uses: actions/checkout@v4
#
#      - name: "Create GitHub release"
#        env:
#          TAG: "${{ github.ref_name || needs.prepare.outputs.tag }}"
#          PRERELEASE: "${{ needs.prepare.outputs.version_type == 'unstable' }}"
#          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#        # Creates a GitHub release using the 'gh' CLI (https://github.com/cli/cli).
#        # Release notes will be generated by GitHub using the config at .github/release.yml.
#        run: |
#          gh release create "$TAG" --generate-notes --prerelease=$PRERELEASE
